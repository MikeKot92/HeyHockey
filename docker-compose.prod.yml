services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: web:1.0.0
    command: gunicorn HeyHockey.wsgi:application --bind 0.0.0.0:8000 --access-logfile '-'
    expose:
      - 8000
    volumes:
      - static_volume:/usr/src/HeyHockey/static
      - media_volume:/usr/src/HeyHockey/media
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
    restart: unless-stopped

  db:
    image: postgres:16-bookworm
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}

  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - redis_data:/data

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    image: celery:1.0.0
    command: celery -A HeyHockey worker --loglevel=info
    env_file:
      - .env.prod
    depends_on:
      - redis
      - db
      - web
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot/ --email kotukhov92@mail.ru --agree-tos --no-eff-email -d hey-hockey.ru -d www.hey-hockey.ru
    depends_on:
      - nginx

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - static_volume:/usr/src/HeyHockey/static
      - media_volume:/usr/src/HeyHockey/media
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  static_volume:
  media_volume: