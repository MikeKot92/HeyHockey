services:
  web:
    build: .
    image: web:1.0.0
    container_name: web
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 127.0.0.1:8000:8000
    volumes:
      - .:/usr/src/HeyHockey
    env_file:
      - .env
    depends_on:
        - db
        - redis

  db:
    image: postgres:16-bookworm
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_PORT=${DB_PORT}

  dbbrowser:
    image: adminer
    container_name: adminer
    ports:
      - 8080:8080
    depends_on:
      - db

  redis:
    image: redis:8.2-bookworm
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    image: celery:1.0.0
    container_name: celery
    command: celery -A HeyHockey worker --loglevel=info --pool=solo
    volumes:
      - .:/usr/src/HeyHockey
    env_file:
      - .env
    depends_on:
      - redis
      - db

volumes:
  redis_data:
  postgres_data: